if("undefined"==typeof OGX)var OGX=function(){};OGX.plugins=function(){},OGX.prototype.MobileApi=function(e){"use strict";function i(e,i){var s={},t=getService(e);if(t){if(n(t,i))return s={success:!1,error:OGX.MobileApi.SERVICE_UNEXPECTED_DATA};var l=o(t,i);if(!l.success)return l;var c=r(t,i);return c.success?(s.success=!0,s):c}return s={success:!1,error:OGX.MobileApi.SERVICE_UNKNOWN}}function n(e,i){var n;if(e.fields)for(var o in i)if("token"!==o){n=!1;for(var r=0;r<e.fields.length;r++)if(o===e.fields[r].name){n=!0;break}if(!n)return console.log("extra data",o),!0}return!1}function o(e,i){var n={success:!0};if(e.fields)for(var o=0;o<e.fields.length;o++)e.fields[o].required&&(i.hasOwnProperty(e.fields[o].name)?String(i[e.fields[o].name])||(n.success=!1,n.error=OGX.MOBiLEAPI.SERVICE_REQUIRED_FIELDS_MISSING,n.fields||(n.fields=[]),n.fields.push(e.fields[o].name)):(n.success=!1,n.error=OGX.MOBiLEAPI.SERVICE_REQUIRED_FIELDS_MISSING,n.fields||(n.fields=[]),n.fields.push(e.fields[o].name)));return n}function r(e,i){var n={success:!1,fields:[]};if(e.fields)for(var o in i)for(var r=0;r<e.fields.length;r++)if(e.fields[r].name===o){if(e.fields[r].array&&e.fields[r].preg)for(var t=0;t<i[o].length;t++)s(e.fields[r].preg,i[o][t])||n.fields.indexOf(o)===-1&&n.fields.push({field:o,value:i[o][t],preg:e.fields[r].preg});else e.fields[r].preg&&String(i[o]).length>0&&(s(e.fields[r].preg,i[o])||n.fields.indexOf(o)===-1&&n.fields.push({field:o,value:i[o],preg:e.fields[r].preg}));break}return 0===n.fields.length?(delete n.fields,n.success=!0):n.error=OGX.MOBiLEAPI.SERVICE_INCORRECT_DATA,n}function s(e,i){var n=new RegExp(e[0],e[1]);return n.test(i)}function t(e,i,n,o,r){if(console.log("call service",e,h.tokens,L),!h.tokens.client.access_token&&!h.tokens.user.access_token)return void console.log("NO TOKEN, EXiT");var s;if(m.logged){if(console.log("calling USER SERVICE",e),A(h.tokens.user))return console.log("USER TOKEN EXPIRED"),L="renewToken",D.push({service:e,data:i,callback:n,params:o}),void X.login(m.username,m.hash,!0);var t=k(h.tokens.user);if(t&&t<1800)return console.log("USER TOKEN SOON EXPIRED"),D.push({service:e,data:i,callback:n,params:o}),void S();s=h.tokens.user.access_token}else{if(console.log("USER NOT LOGGED"),A(h.tokens.client))return console.log("CLIENT TOKEN EXPIRED"),L="renewToken",D.push({service:e,data:i,callback:n,params:o}),void I(!1,!0);console.log("calling CLIENT SERVICE",e),s=h.tokens.client.access_token}var c=window.location.href;h.url&&(c=h.url);var a={uuid:h.uuid,service:e,data:i,access_token:s},E=JSON.stringify(a);$.ajax({method:"POST",url:h.url,data:E,async:!0,processData:!1,contentType:"application/json",dataType:"json",success:function(r,s,t){if(console.log(r),r.success)n?o?n(r,o):n(r):$(document).trigger(OGX.MobileApi.SERVICE_DATA,r),l();else switch(r.error){case OGX.MobileApi.SESSION_EXPIRED:m.logged&&O(),$(document).trigger(OGX.MobileApi.SESSION_EXPIRED);break;case OGX.MobileApi.SCOPE_INVALID:m.logged&&O(),$(document).trigger(OGX.MobileApi.SCOPE_INVALID);break;case OGX.MobileApi.TOKEN_INVALID:console.log("INVALID TOKEN - LOGGED IN FROM ANOTHER DEVICE or password change?"),h.auto_log&&m.hash&&(L="userToken",D.push({service:e,data:i,callback:n,params:o}),u(m.username,m.hash,!0)),$(document).trigger(OGX.MobileApi.TOKEN_INVALID)}},error:function(e,i,n){$(document).trigger(OGX.MobileApi.ERROR_NETWORK)}})}function l(){if(D.length>0){L="backlog";var e=D.shift();X.call(e.service,e.data,e.callback,e.params)}else L="ready",$(document).trigger(OGX.MobileApi.SESSION_READY)}function c(){var e=!1;return e=h.debug||"undefined"==typeof device?"00000-0000-0000-00000":device.uuid}function u(e,i,n,o){console.log("LOGIN with",e,i),$.ajax({method:"POST",url:h.url,data:JSON.stringify({uuid:h.uuid,username:e,password:i,client_id:h.client_id,client_secret:h.client_secret,grant_type:"password"}),async:!0,processData:!1,contentType:"application/json",success:function(r,s,t){r.success?r.access_token&&(console.log("LOGIN SUCCESS"),a(r,e,i,n,o)):(d(),$(document).trigger(OGX.MobileApi.LOGIN_ERROR,{error:"Invalid email/password combination"}))},error:function(e,i,n){$(document).trigger(OGX.MobileApi.ERROR_NETWORK)}})}function a(e,i,n,o,r){h.tokens.user.access_token=e.access_token,h.tokens.user.refresh_token=e.refresh_token,h.tokens.user.expire=moment().unix()+e.expires_in-10,E(m,e.user),m.hash=n,m.logged=!0,_(),f(),l(),o||$(document).trigger(OGX.MobileApi.LOGIN_SUCCESS),r&&r()}function O(){$.ajax({method:"POST",url:h.url,data:JSON.stringify({grant_type:"logout",access_token:h.tokens.user.access_token}),async:!0,processData:!1,contentType:"application/json",success:function(e,i,n){h.tokens.user.access_token=0,h.tokens.user.refresh_token=0,h.tokens.user.expire=0,m.logged=!1,_(),f(),$(document).trigger(OGX.MobileApi.LOGOUT_SUCCESS)},error:function(e,i,n){h.tokens.user.access_token=0,h.tokens.user.refresh_token=0,h.tokens.user.expire=0,m.logged=!1,_(),f(),$(document).trigger(OGX.MobileApi.LOGOUT_ERROR)}})}function E(e,i){for(var n in i)e[n]=i[n]}function p(){var e=localStorage.getItem("user");e?(m=$.parseJSON(e),console.log("USER",e)):d()}function f(){var e=JSON.stringify(m);e&&localStorage.setItem("user",e)}function d(){m=$.parseJSON(JSON.stringify(C)),m.logged=!1,f()}function g(){var e=localStorage.getItem("tokens");return!!e&&(console.log("LOADED TOKENS",e),$.parseJSON(e))}function _(){localStorage.setItem("tokens",JSON.stringify(h.tokens))}function R(){h.tokens={client:{access_token:null,refresh_token:null,expire:0},user:{access_token:null,refresh_token:null,expire:0}},_()}function S(){console.log("REFRESH USER TOKEN"),L="refreshToken",$.ajax({method:"POST",url:h.url,data:JSON.stringify({grant_type:"refresh_token",client_id:h.client_id,client_secret:h.client_secret,refresh_token:h.tokens.user.refresh_token}),async:!0,processData:!1,contentType:"application/json",success:function(e,i,n){console.log("REFRESH : ",e),h.tokens.user.access_token=e.access_token,h.tokens.user.refresh_token=e.refresh_token,h.tokens.user.expire=moment().unix()+e.expires_in,_(),l(),$(document).trigger(OGX.MobileApi.TOKEN_REFRESHED)},error:function(e,i,n){L="error",console.log("ERROR",i,n),$(document).trigger(OGX.MobileApi.TOKEN_REFRESH_ERROR,n)}})}function I(e,i){console.log("GET CLIENT TOKEN"),L="clientToken",$.ajax({method:"POST",url:h.url,data:JSON.stringify({grant_type:"client_credentials",client_id:h.client_id,client_secret:h.client_secret}),async:!0,processData:!1,contentType:"application/json",success:function(n,o,r){L="ready",h.tokens.client.access_token=n.access_token,h.tokens.client.expire=moment().unix()+n.expires_in,_(),$(document).trigger(OGX.MobileApi.TOKEN_CLIENT),e&&m&&u(m.username,m.hash,!0),i&&l()},error:function(e,i,n){L="error",console.log("ERROR",i,n),$(document).trigger(OGX.MobileApi.TOKEN_CLIENT_ERROR,n)}})}function A(e){return e.expire<moment().unix()}function k(e){return e.expire-moment().unix()}function G(){L="initTokens";var e=!1,i=!1,n=g();if(n)if(console.log("LOADED",n),h.tokens=n,h.tokens.user.access_token){if(h.auto_log&&m){if(!A(h.tokens.user))return L="ready",void $(document).trigger(OGX.MobileApi.LOGIN_SOFT);if(!h.tokens.client||!A(h.tokens.client))return void u(m.username,m.hash,!0);i=!0,e=!0}}else console.log("FALLBACK"),h.tokens.client.access_token?A(h.tokens.client)&&(i=!0):i=!0;else R(),i=!0;return console.log("FETCH",e,i),i?void I(e):void(L="ready")}function N(e,i){if(e){var n=new OGX.plugins[i](h.plugins[i]);return X.plugins[i]=n,!0}return X.plugins[i].kill&&X.plugins[i].kill(),X.plugins[i]=null,!0}function T(e){if(e){var i;for(var n in h.plugins)i=new OGX.plugins[n](h.plugins[n]),X.plugins[n]=i}else{for(var n in plugins)X.plugins[n].hasOwnProperty("kill")&&X.plugins[n].kill();X.plugins={}}}function b(){"undefined"==typeof h&&(h={});for(var e in M)h.hasOwnProperty(e)||(h[e]=M[e]);h.uuid=c()}function v(){return"undefined"==typeof CryptoJS?void console.log("%c CRITICAL ERROR - CryptoJS not found! ","background:#222; color: #FF0000"):"undefined"==typeof moment?void console.log("%c CRITICAL ERROR - MomentJS not found! ","background:#222; color: #FF0000"):(b(),h.force_new&&R(),p(),h.load_plugins&&setTimeout(T(!0),0),void setTimeout(G(),0))}var X=this,h=e,M={debug:!1,client_id:null,client_secret:null,uuid:null,tokens:null,device_token:!1,load_plugins:!1,force_new:!1,force_refresh:!1,auto_log:!0},m={},C={_id:null,username:null,first_name:null,last_name:null,image_https:null,home:{city:null,country:null,state:null,zip:null,lat:null,lng:null,address:0},logged:!1,scope:["public"]},D=[],L="init";this.plugins={},this.type="OgxApi",this.updateUser=function(e,i){for(var n in e)m.hasOwnProperty(n)&&(m[n]=e[n]);f()},this.updateUserProp=function(e,i){m[e]=i,f()},this.getUser=function(){return m},this.loadPlugin=function(e){return N(!0,e)},this.storeObject=function(e,i){localStorage.setItem(e,JSON.stringify(i))},this.getObject=function(e){var i=localStorage.getItem(e);return!!i&&$.parseJSON(i)},this.isLogged=function(){return m.logged},this.login=function(e,i,n,o){if("undefined"==typeof n)var n=!1;if("undefined"==typeof o)var o=!0;if(!n&&m.logged)return"already logged";var r=i;o&&(r=CryptoJS.MD5(i).toString()),u(e,r,!1)},this.logout=function(){O()},this.call=function(e,i,n,o,r){return console.log(L),"ready"!==L&&"backlog"!==L?void D.push({service:e,data:i,callback:n,params:o}):void setTimeout(function(){t(e,i,n,o,r)},0)},this.validate=function(e,n){var o=i(e,n);return o},this.getUUID=function(){return h.uuid},v()},OGX.MobileApi=function(e){"use strict";return new OGX.prototype.MobileApi(e)},OGX.MobileApi.CRITICAL_ERROR="criticalError",OGX.MobileApi.SERVICE_INPUT_ERROR="serviceInputError",OGX.MobileApi.SERVICE_UNEXPECTED_DATA="serviceUnexpectedData",OGX.MobileApi.SERVICE_INCORRECT_DATA="serviceIncorrectData",OGX.MobileApi.SERVICE_REQUIRED_FIELDS_MISSING="serviceRequiredFieldsMissing",OGX.MobileApi.SERVICE_UNAVAILABLE="serviceUnavailable",OGX.MobileApi.SERVICE_UNKNOWN="serviceUnknown",OGX.MobileApi.SERVICE_DATA="serviceData",OGX.MobileApi.SERVICE_SPAM="serviceSpam",OGX.MobileApi.USER_SESSION_EXPIRED="userSessionExpired",OGX.MobileApi.SESSION_EXPIRED="expired_token",OGX.MobileApi.SESSION_INVALID="sessionInvalid",OGX.MobileApi.SESSION_READY="sessionReady",OGX.MobileApi.SESSION_ERROR="sessionError",OGX.MobileApi.SESSION_RESTART="sessionRestart",OGX.MobileApi.SCOPE_INVALID="scopeInvalid",OGX.MobileApi.LOGIN_ERROR="loginError",OGX.MobileApi.LOGIN_SUCCESS="loginSuccess",OGX.MobileApi.LOGIN_SOFT="loginSoft",OGX.MobileApi.LOGOUT="logOut",OGX.MobileApi.LOGOUT_SUCCESS="logOutSuccess",OGX.MobileApi.LOGOUT_ERROR="logOutError",OGX.MobileApi.TOKEN_INVALID="invalidToken",OGX.MobileApi.TOKEN_MISSING="tokenMissing",OGX.MobileApi.TOKEN_REFRESHED="tokenRefreshed",OGX.MobileApi.TOKEN_CLIENT="tokenClient",OGX.MobileApi.TOKEN_CLIENT_ERROR="tokenClientError",OGX.MobileApi.TOKEN_REFRESH_ERROR="tokenRefreshError",OGX.MobileApi.ERROR_FILE_SIZE="errorFileSize",OGX.MobileApi.ERROR_GENERIC="errorGeneric",OGX.MobileApi.ERROR_NETWORK="errorNetwork",OGX.MobileApi.UPLOAD_START="uploadStart",OGX.MobileApi.UPLOAD_ABORTED="uploadAborted",OGX.MobileApi.UPLOAD_COMPLETE="uploadComplete",OGX.MobileApi.UPLOAD_PROGRESS="uploadProgress";